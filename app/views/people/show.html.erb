<%- content_for(:head) do -%>
<%= javascript_include_tag "jit" -%>
<%= stylesheet_link_tag "jit-spacetree" -%>
<%- end -%>

<%- content_for(:body_tag_attributes) do -%>
onLoad="init();"
<%- end -%>

<script type="text/javascript">

function init()
{
  var people = <%= strip_tags( @person.ancestry_json ) %>;

  //Create a new ST instance  
  var st = new $jit.ST({  
    //make it a multitree
    multitree: true,
    //set orientation of the tree
    orientation: 'top',
    //id of viz container element  
    injectInto: 'infovis',  
    //set distance between node and its children  
    levelDistance: 50,  
    //enable panning  
    Navigation: {  
      enable:true,  
      panning:true,
      zooming: 20  
    },  
    //set node and edge styles  
    //set overridable=true for styling individual  
    //nodes or edges  
    Node: {  
      height: 20,  
      width: 60,  
      type: 'rectangle',  
      color: '#aaa',  
      overridable: true  
    },  
      
    Edge: {  
      type: 'bezier',  
      overridable: true  
    },  
      
    //This method is called on DOM label creation.  
    //Use this method to add event handlers and styles to  
    //your node.  
    onCreateLabel: function(label, node){  
      label.id = node.id;              
      label.innerHTML = node.name;  
      label.onclick = function(){  
        document.location.href = '/people/'+node.id;
      };  
      //set label styles  
      var style = label.style;  
      style.width = 60 + 'px';  
      style.height = 17 + 'px';              
      style.cursor = 'pointer';  
      style.color = '#333';  
      style.fontSize = '0.8em';  
      style.textAlign= 'center';  
      style.paddingTop = '3px';  
    },  
      
    //This method is called right before plotting  
    //a node. It's useful for changing an individual node  
    //style properties before plotting it.  
    //The data properties prefixed with a dollar  
    //sign will override the global node style properties.  
    onBeforePlotNode: function(node){  
      //add some color to the nodes in the path between the  
      //root node and the selected node.  
      if (node.selected) {  
        node.data.$color = "#ff7";  
      }  
      else {  
        delete node.data.$color;  
        //if the node belongs to the last plotted level  
        if(!node.anySubnode("exist")) {  
          //count children number  
          var count = 0;  
          node.eachSubnode(function(n) { count++; });  
          //assign a node color based on  
          //how many children it has  
          node.data.$color = ['#aaa', '#baa', '#caa', '#daa', '#eaa', '#faa'][count];                      
        }  
      }  
    },  
      
    //This method is called right before plotting  
    //an edge. It's useful for changing an individual edge  
    //style properties before plotting it.  
    //Edge data proprties prefixed with a dollar sign will  
    //override the Edge global style properties.  
    onBeforePlotLine: function(adj){  
      if (adj.nodeFrom.selected && adj.nodeTo.selected) {  
        adj.data.$color = "#eed";  
        adj.data.$lineWidth = 3;  
      }  
      else {  
        delete adj.data.$color;  
        delete adj.data.$lineWidth;  
      }  
    }  
  });  
  //load json data  
  st.loadJSON(people);  
  //compute node positions and layout  
  st.compute();  
  st.select(st.root);
}

</script>

<div id="infovis"></div>    

<p id="notice"><%= notice %></p>

<p>
  <b>Name:</b>
  <%= @person.name %>
</p>

<p>
  <b>Gender:</b>
  <%= @person.gender %>
</p>

<p>
  <b>Father:</b>
  <%= link_to(@person.father.name, @person.father) if @person.father %>
</p>

<p>
  <b>Mother:</b>
  <%= link_to(@person.mother.name, @person.mother) if @person.mother %>
</p>

<p>
  <b>Partners:</b>
  <% @person.partners.each do |person| %>
  <%=  link_to(person.name, person) %>
  <% end %>
</p>

<p>
  <b>Children:</b>
  <% if @person.children 
        @person.children.each { |child| %>
  <%=     link_to(child.name, child) %>
  <%    }
     end %>
</p>

<p>
  <b>Bio:</b>
  <%= @person.bio %>
</p>


<%= link_to 'Edit', edit_person_path(@person) %> |
<%= link_to 'Back', people_path %>
